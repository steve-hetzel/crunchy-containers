{
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": {
      "name": "statefulset-dyn-sa"
    }
}

{
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "name": "statefulset-dyn",
      "labels": {
        "app": "statefulset-dyn"
      }
    },
    "spec": {
      "ports": [
        {
          "port": 5432,
          "name": "web"
        }
      ],
      "clusterIP": "None",
      "selector": {
        "app": "statefulset-dyn"
      }
    }
}

{
    "kind": "Service",
    "apiVersion": "v1",
    "metadata": {
        "name": "statefulset-dyn-primary",
        "labels": {
            "name": "statefulset-dyn-primary"
        }
    },
    "spec": {
        "ports": [{
            "protocol": "TCP",
            "port": 5432,
            "targetPort": 5432,
            "nodePort": 0
        }],
        "selector": {
            "name": "statefulset-dyn-primary"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
    }
}

{
    "kind": "Service",
    "apiVersion": "v1",
    "metadata": {
        "name": "statefulset-dyn-replica",
        "labels": {
            "name": "statefulset-dyn-replica"
        }
    },
    "spec": {
        "ports": [{
            "protocol": "TCP",
            "port": 5432,
            "targetPort": 5432,
            "nodePort": 0
        }],
        "selector": {
            "name": "statefulset-dyn-replica"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
    }
}

{
    "apiVersion": "apps/v1beta1",
    "kind": "StatefulSet",
    "metadata": {
        "name": "statefulset-dyn"
    },
    "spec": {
        "serviceName": "statefulset-dyn",
        "replicas": 2,
        "template": {
            "metadata": {
                "labels": {
                    "app": "statefulset-dyn"
                }
            },
            "spec": {
                "securityContext":{
                    $CCP_SECURITY_CONTEXT
                },
                "containers": [{
                    "name": "statefulset-dyn",
                    "image": "$CCP_IMAGE_PREFIX/crunchy-postgres:$CCP_IMAGE_TAG",
                    "ports": [{
                        "containerPort": 5432,
                        "name": "postgres"
                    }],
                    "env": [{
                        "name": "PG_PRIMARY_USER",
                        "value": "primaryuser"
                    }, {
                        "name": "PGHOST",
                        "value": "/tmp"
                    }, {
                        "name": "PG_MODE",
                        "value": "set"
                    }, {
                        "name": "PG_PRIMARY_PASSWORD",
                        "value": "password"
                    }, {
                        "name": "PG_USER",
                        "value": "testuser"
                    }, {
                        "name": "PG_PASSWORD",
                        "value": "password"
                    }, {
                        "name": "PG_DATABASE",
                        "value": "userdb"
                    }, {
                        "name": "PG_ROOT_PASSWORD",
                        "value": "password"
                    }, {
                        "name": "PG_PRIMARY_PORT",
                        "value": "5432"
                    }, {
                        "name": "PG_PRIMARY_HOST",
                        "value": "statefulset-dyn-primary"
                    }],
                    "volumeMounts": [{
                        "name": "pgdata",
                        "mountPath": "/pgdata",
                        "readOnly": false
                    }]
                }]
            }
        },
        "volumeClaimTemplates": [{
            "metadata": {
                "name": "pgdata",
                "annotations": {
                    "volume.alpha.kubernetes.io/storage-class": "slow"
                }
            },
            "spec": {
                "accessModes": [
                    "ReadWriteMany"
                ],
                "resources": {
                    "requests": {
                        "storage": "400M"
                    }
                }
            }
        }]
    }
}
